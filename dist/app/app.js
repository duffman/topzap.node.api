'use strict';Object.defineProperty(exports,'__esModule',{value:true});const miner_status_1=require('../miner/miner-status');const express=require('express');const express_1=require('express');const bodyParser=require('body-parser');const cookieParser=require('cookie-parser');const database_manager_1=require('../lib/putte-db/database-manager');const logger_1=require('./cli/logger');const miner_api_controller_1=require('./api/miner-api-controller');const product_db_1=require('../database/product-db');const service_api_controller_1=require('./api/service-api-controller');class App{constructor(minerApi=false){this.minerApi=minerApi;this.port=8080;this.webRoutes=express_1.Router();this.apiControllers=new Array();this.webServer=express();this.db=new database_manager_1.DbManager();this.productDb=new product_db_1.ProductDb();this.minerServ=new miner_api_controller_1.MinerApiController();this.init();}test(barcode){return new Promise((resolve,reject)=>{this.productDb.getProductOffers(barcode,false,false).then(result=>{resolve(result);}).catch(error=>{logger_1.Logger.logError('Error in test',error);});});}initControllers(){const routes=this.webRoutes;const controllers=this.apiControllers;controllers.push(new miner_api_controller_1.MinerApiController());controllers.push(new service_api_controller_1.ServiceApiController());console.log('CONTROLLERS');for(let controller in controllers){console.log('CONTROLLER ::',controller);}}configureWebServer(){let app=this.webServer;app.set('view engine','ejs');app.use(cookieParser());app.use(bodyParser.json());app.use(bodyParser.urlencoded({extended:true}));app.use(function(req,res,next){res.header('Access-Control-Allow-Origin','*');res.header('Access-Control-Allow-Headers','Origin, X-Requested-With, Content-Type, Accept');next();});}init(){let app=this.webServer;this.configureWebServer();this.initControllers();app.get('/minerstats',function(req,res){let stat=new miner_status_1.MinerStatus();stat.getProgressInfo().then(data=>{console.log(data);res.render('pages/minerstats',{progData:data});});});app.use(express.static('public'));app.get('/res/:filename',(req,res)=>{let filename=req.params.code;console.log('Get file',filename);});app.listen(this.port);console.log(`Listening on localhost: ${this.port}`);}}exports.App=App;let minerApi=true;let app=new App(minerApi);