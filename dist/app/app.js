'use strict';Object.defineProperty(exports,'__esModule',{value:true});const miner_status_1=require('../miner/miner-status');const express=require('express');const express_1=require('express');const bodyParser=require('body-parser');const cookieParser=require('cookie-parser');const session=require('express-session');const database_manager_1=require('../lib/putte-db/database-manager');const cli_logger_1=require('./cli/cli.logger');const miner_api_controller_1=require('./api/miner-api-controller');const product_db_1=require('../database/product-db');const service_api_controller_1=require('./api/service-api.controller');const cli_commander_1=require('./cli/cli.commander');const search_api_controller_1=require('./api/search-api.controller');const product_api_controller_1=require('./api/product-api.controller');const zyn_session_1=require('../lib/zyn-express/zyn.session');const basket_api_controller_1=require('./components/basket/basket-api.controller');const data_dump_api_controller_1=require('./api/data-dump-api.controller');const socket_io_server_1=require('../lib/coldmind-igniter/coldmind/socket-io.server');class ZapApp{constructor(includeMinerApi=false){this.includeMinerApi=includeMinerApi;this.port=8080;this.wsPort=8081;this.debugMode=false;this.webRoutes=express_1.Router();this.version='1.6.5';this.apiControllers=new Array();this.webApp=express();let http=require('http').Server(this.webApp);let io=require('socket.io')(http);this.wsServer=new socket_io_server_1.IgniterServerSocket(false);this.wsServer.attachSocketIO(io);this.sessionMiddleware=session({secret:'keyboard cat',cookie:{maxAge:60000}});this.webApp.use(this.webRoutes);this.db=new database_manager_1.DbManager();this.productDb=new product_db_1.ProductDb();console.log(' ');console.log(' ');console.log('>> webApp.routes',this.webApp.routes);console.log('>> TYPE :: webApp.routes',typeof this.webApp.routes);console.log(' ');console.log('>> webRoutes',this.webRoutes);console.log('>> TYPE :: webRoutes.routes',typeof this.webRoutes);console.log(' ');console.log(' ');this.init();}getAppVersion(){return'ZapApp-Node-API/'+this.version;}getSecret(){return'ZapApp-Node-API/WillyW0nka';}init(){const routes=this.webRoutes;this.configureWebServer();this.configureWebSocket();this.initControllers();routes.get('/test',function(req,res){console.log('TypeOf Session ::',typeof req.session);if(req.session.basket){req.session.basket.itemCount++;res.setHeader('Content-Type','text/html');res.write('<p>views: '+req.session.basket.itemCount+'</p>');res.write('<p>expires in: '+req.session.cookie.maxAge/1000+'s</p>');res.end();}else{req.session.basket={type:'basket',itemCount:0};res.end('welcome to the session demo. refresh! :: '+req.session.basket.itemCount);}});routes.get('/minerstats',(req,res)=>{let stat=new miner_status_1.MinerStatus();stat.getProgressInfo().then(data=>{console.log(data);res.render('pages/minerstats',{progData:data});});});this.webApp.use(express.static('public'));this.webApp.get('/res/:filename',(req,res)=>{let filename=req.params.code;console.log('Get file',filename);});this.webApp.listen(this.port);console.log(`Listening on localhost: ${this.port}`);}registerMiddleware(){const middleware=this.webAppMiddleware;const routes=this.webRoutes;middleware.push(new zyn_session_1.ZynSession());for(let index in middleware){let zynMiddleware=middleware[index];zynMiddleware.initRoutes(routes);}}initControllers(){const routes=this.webRoutes;const controllers=this.apiControllers;controllers.push(new search_api_controller_1.SearchApiController(this.debugMode));controllers.push(new service_api_controller_1.ServiceApiController(this.debugMode));controllers.push(new product_api_controller_1.ProductApiController(this.debugMode));controllers.push(new miner_api_controller_1.MinerApiController(this.debugMode));controllers.push(new basket_api_controller_1.BasketApiController(this.debugMode));controllers.push(new data_dump_api_controller_1.DataDumpApiController(this.debugMode));for(let index in controllers){let controller=controllers[index];controller.initRoutes(routes);}}configureWebSocket(){let wss=this.wsServer;wss.io.use((socket,next)=>{this.sessionMiddleware(socket.request,socket.request.res,next);});wss.onServerStarted(port=>{cli_logger_1.Logger.logYellow('Websocket IOServer Started on port ::',port);});wss.onError(err=>{cli_logger_1.Logger.logError('Websocket Error ::',err);});wss.onMessage(mess=>{cli_logger_1.Logger.logError('Websocket :: Message ::',mess);});wss.io.sockets.on('connection',socket=>{socket.request.session;});}configureWebServer(){let routes=this.webRoutes;this.webApp.set('view engine','ejs');function genuuid(){console.log('Generate ID::::');return'uidSafe(18)';}routes.use(this.sessionMiddleware);routes.use(cookieParser());routes.use(bodyParser.json());routes.use(bodyParser.urlencoded({extended:true}));routes.use(function(req,res,next){res.header('Access-Control-Allow-Origin','*');res.header('Access-Control-Allow-Headers','Origin, X-Requested-With, Content-Type, Accept');next();});routes.use(function(err,req,res,next){res.status(err.status||500);res.render('error',{message:'err.message',error:{}});});}setErrorMiddleware(){if(ZapApp.developmentMode){this.webApp.use(function(err,req,res,next){res.status(err.status||500);res.render('error',{message:err.message,error:err});});}else{this.webApp.use(function(err,req,res,next){res.status(err.status||500);res.render('error',{message:err.message,error:{}});});}}}ZapApp.developmentMode=false;exports.ZapApp=ZapApp;if(cli_commander_1.CliCommander.debug()){let minerApi=true;let app=new ZapApp(minerApi);}