'use strict';Object.defineProperty(exports,'__esModule',{value:true});const basket_item_model_1=require('../../models/zap-ts-models/basket-item.model');const basket_model_1=require('../../models/zap-ts-models/basket.model');const prand_num_1=require('../../../lib/putte-ts/prand-num');class BasketHandler{constructor(sessManager){this.sessManager=sessManager;}getSessionBasket(sessId){return this.sessManager.getSessionBasket(sessId);}addToBasket(sessId,offerData){let scope=this;let sessBasket=this.getSessionBasket(sessId);if(!offerData.accepted){console.log('NOT ACCEPTED');return false;}let vendorOffer=parseFloat(offerData.offer);let resultItem=new basket_item_model_1.BasketItem(prand_num_1.PRandNum.randomNum(),offerData.code,offerData.vendorId,offerData.title,vendorOffer);return this.addToVendorBasket(sessId,resultItem);}addToVendorBasket(sessId,item){let basket=this.getVendorBasket(sessId,item.vendorId);let existingItem=basket.items.find(o=>o.code===item.code);if(typeof existingItem==='object'){existingItem.count++;}else{basket.items.push(item);}return true;}getVendorBasket(sessId,vendorId){let result=null;let sessBasket=this.getSessionBasket(sessId);for(let i=0;i<sessBasket.data.length;i++){let basket=sessBasket.data[i];if(basket.vendorId===vendorId){result=basket;break;}}if(result===null){result=new basket_model_1.VendorBasketModel(vendorId);sessBasket.data.push(result);}return result;}getBasketTotal(basket){let total=0;for(let index in basket.items){let item=basket.items[index];total=total+item.offer;}return total;}getBestBasket(sessId){let vendorBaskets=this.getSessionBasket(sessId);let bestTotal=0;let bestBaset=null;console.log('getBestBasket ::',bestBaset);for(let index in vendorBaskets.data){let basket=vendorBaskets.data[index];let total=this.getBasketTotal(basket);if(total>bestTotal){bestTotal=total;bestBaset=basket;}}return bestBaset;}getFullBasket(sessId){let sessBasket=this.getSessionBasket(sessId);console.log('getFullBasket :: sessBasket ::',sessBasket);return sessBasket;}showBasket(sessId){let basket=this.sessManager.getSessionBasket(sessId);for(const vendorData of basket.data){console.log('BASKET :: VENDOR ::',vendorData.vendorId);for(const item of vendorData.items){console.log('  ITEM ::',item);}}}}exports.BasketHandler=BasketHandler;