'use strict';Object.defineProperty(exports,'__esModule',{value:true});const zap_message_types_1=require('../../models/zap-ts-models/zap-message-types');const message_types_1=require('../../../lib/coldmind-igniter/messaging/message-types');const basket_handler_1=require('./basket.handler');const session_manager_1=require('../session-manager');const message_factory_1=require('../../../lib/coldmind-igniter/messaging/message-factory');class BasketWsApiController{constructor(debugMode=false){this.debugMode=debugMode;this.sessManager=new session_manager_1.SessionManager();this.basketHandler=new basket_handler_1.BasketHandler(this.sessManager);}attachWSS(wss){this.wss=wss;this.wss.onMessage(mess=>{let sessId=mess.socket.request.sessionID;if(mess.id===zap_message_types_1.ZapMessageType.BasketPull){this.onBasketPull(sessId);}if(mess.id===zap_message_types_1.ZapMessageType.BasketGet){this.onBasketGet(sessId);}if(mess.id===zap_message_types_1.ZapMessageType.BasketAdd){this.emitGetOffersMessage(mess.data.code,sessId);mess.ack();}});}attachServiceClient(client){this.serviceClient=client;this.serviceClient.onMessage(this.onServiceMessage.bind(this));}onServiceMessage(mess){let scope=this;if(mess.id===zap_message_types_1.ZapMessageType.GetOffersInit){this.onMessOffersInit(mess.tag);}if(mess.id===zap_message_types_1.ZapMessageType.VendorOffer){this.onMessVendorOffer(mess.tag,mess.data);}if(mess.id===zap_message_types_1.ZapMessageType.GetOffersDone){this.onMessOffersDone(mess.tag);}}onBasketGet(sessId){console.log('onBasketGet');let bestBasket=this.basketHandler.getBestBasket(sessId);console.log('onBasketGet :: bestBasket');let message=message_factory_1.MessageFactory.newIgniterMessage(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.BasketGet,bestBasket);this.wss.sendToSessionId(sessId,message);}onBasketPull(sessId){let vendorBaskets=this.basketHandler.getFullBasket(sessId);let message=message_factory_1.MessageFactory.newIgniterMessage(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.BasketPull,vendorBaskets);this.wss.sendToSessionId(sessId,message);}onMessOffersInit(sessId){console.log('BasketWsApiController :: onMessOffersInit ::',sessId);}onMessVendorOffer(sessId,data){console.log('BasketWsApiController :: onMessVendorOffer :: '+sessId+' ::',data);this.basketHandler.addToBasket(sessId,data);let bestBasket=this.basketHandler.getBestBasket(sessId);this.basketHandler.showBasket(sessId);let message=message_factory_1.MessageFactory.newIgniterMessage(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.BasketAddRes,bestBasket);this.wss.sendToSessionId(sessId,message);}onMessOffersDone(sessId){console.log('BasketWsApiController :: onMessOffersDone ::',sessId);}basketAdd(){}emitGetOffersMessage(code,sessId){let messageData={code:code};this.serviceClient.sendMessage(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.GetOffers,messageData,sessId);}initRoutes(routes){}}exports.BasketWsApiController=BasketWsApiController;