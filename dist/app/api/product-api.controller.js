'use strict';Object.defineProperty(exports,'__esModule',{value:true});const product_db_1=require('../../database/product-db');const cli_logger_1=require('../cli/cli.logger');class ProductApiController{constructor(){this.productDb=new product_db_1.ProductDb();}getProduct(barcode){return new Promise((resolve,reject)=>{this.productDb.getProduct(barcode).then(res=>{resolve(res);cli_logger_1.Logger.log('getProduct ::',res);}).catch(err=>{cli_logger_1.Logger.logError('ProductApiController :: getProduct :: error ::',err);reject(err);});});}initRoutes(routes){let scope=this;routes.get('/kalle/:code',(req,resp)=>{console.log(':: KALLE ::');resp.json({kalle:'kula'});});routes.post('/prod/:code',(req,resp)=>{let code=req.params.code;});routes.post('/prod',(req,resp)=>{let code=req.body.code;console.log('CODE :: ',code);scope.getProduct(code).then(prodResult=>{cli_logger_1.Logger.log('ProductApiController :: getProduct ::',prodResult);console.log('KKKKK ::',JSON.stringify(prodResult));resp.json(prodResult);}).catch(err=>{cli_logger_1.Logger.logError('ProductApiController :: error ::',err);resp.json({result:'fail',errorCode:6667});});});routes.get('/prod/:code',(req,resp)=>{let code=req.params.code;console.log('CODE :: ',code);scope.getProduct(code).then(prodResult=>{cli_logger_1.Logger.log('ProductApiController :: getProduct ::',prodResult);console.log('KKKKK ::',JSON.stringify(prodResult));resp.json(prodResult);}).catch(err=>{cli_logger_1.Logger.logError('ProductApiController :: error ::',err);resp.json({result:'fail',errorCode:6667});});});routes.post('/calcbasket/:barcode',(req,res)=>{let fruits=req.body.items.split(',');console.log(fruits);});}}exports.ProductApiController=ProductApiController;