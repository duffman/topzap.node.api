'use strict';Object.defineProperty(exports,'__esModule',{value:true});const cli_logger_1=require('../cli/cli.logger');const zappy_app_settings_1=require('../zappy.app.settings');const product_db_1=require('../../database/product-db');const controller_utils_1=require('./controller.utils');const price_search_service_1=require('../core/price-search-engine/price.search-service');const cli_commander_1=require('../cli/cli.commander');const zap_offer_model_1=require('../zap-ts-models/zap-offer.model');class SearchApiController{constructor(debugMode=false){this.debugMode=debugMode;this.productDb=new product_db_1.ProductDb();this.searchService=new price_search_service_1.PriceSearchService();}initRoutes(routes){let scope=this;let extendedProdData=true;routes.post('/code',(req,resp)=>{console.log('CODE FROM NR 1 ::',req.body.code);cli_logger_1.Logger.spit();cli_logger_1.Logger.spit();console.log('REQUEST BODY ::',req.body);cli_logger_1.Logger.spit();cli_logger_1.Logger.spit();let data=req.body;let reqCode=data.code;let fullResult=!data.cache;let debug=data.debug;console.log('Given Barcode:',data);cli_logger_1.Logger.logGreen('Prepared Barcode:',reqCode);scope.callSearchService(reqCode).then(searchRes=>{resp.setHeader('Content-Type','application/json');resp.json({test:'kalle'});}).catch(err=>{controller_utils_1.ApiControllerUtils.internalError(resp);cli_logger_1.Logger.logError('SearchApiController :: error ::',err);});});routes.get('/code/:code',this.doDebugSearch.bind(this));}doDebugSearch(req,resp){console.log('SEARCH FUCKING DEBUG!!!');let code='819338020068';return new Promise((resolve,reject)=>{this.callSearchService(code).then(searchRes=>{resolve(searchRes);}).catch(err=>{controller_utils_1.ApiControllerUtils.internalError(resp);cli_logger_1.Logger.logError('SearchApiController :: error ::',err);});});}callSearchService(code){cli_logger_1.Logger.logGreen('callSearchService');let url=zappy_app_settings_1.Settings.PriceServiceApi.Endpoint;return new Promise((resolve,reject)=>{return this.searchService.doDebugSearch(code).then(searchResult=>{console.log('callSearchService :: doSearch ::',searchResult);let result=zap_offer_model_1.ZapOfferResult.toZapRes(searchResult);resolve(result);}).catch(err=>{console.log('callSearchService :: error ::',err);resolve(err);});});}}exports.SearchApiController=SearchApiController;if(cli_commander_1.CliCommander.debug()){let app=new SearchApiController();app.doDebugSearch(null,null);}