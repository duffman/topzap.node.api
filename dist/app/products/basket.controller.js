'use strict';Object.defineProperty(exports,'__esModule',{value:true});const cli_logger_1=require('../cli/cli.logger');const basket_item_model_1=require('../zap-ts-models/basket-item.model');const basket_model_1=require('../zap-ts-models/basket.model');const zap_offer_model_1=require('../zap-ts-models/zap-offer.model');const basket_add_result_1=require('../zap-ts-models/basket-add-result');const basket_collection_1=require('../zap-ts-models/basket-collection');const zap_basket_model_1=require('../zap-ts-models/zap-basket.model');const price_search_service_1=require('../core/price-search-engine/price.search-service');const zappy_app_settings_1=require('../zappy.app.settings');const controller_utils_1=require('../api/controller.utils');class BasketApiController{constructor(){this.searchService=new price_search_service_1.PriceSearchService();}echoDebug(){for(let i=0;i<this.sessionBasket.data.length;i++){let basket=this.sessionBasket.data[i];console.log('Vecndor :: '+basket.vendorId,basket.items);}}getSessionBasket(){if(this.reqSession.sessionBasket){this.sessionBasket=this.reqSession.sessionBasket;console.log('SESSION BASKET ::',this.sessionBasket);}else{this.reqSession.sessionBasket=new basket_collection_1.SessionBasket();this.sessionBasket=this.reqSession.sessionBasket;}return this.sessionBasket;}setSessionBasket(){try{this.reqSession.sessionBasket=this.sessionBasket;}catch(err){console.log('setSessionBasket :: err ::',err);return false;}return true;}getHighestBidder(offerData){let highVendor=null;for(let i=0;i<offerData.vendors.length;i++){let vendor=offerData.vendors[i];if(!vendor.accepted){console.log('NOT ACCEPTED');continue;}if(highVendor===null){highVendor=vendor;}let highOffer=parseFloat(highVendor.offer);let vendorOffer=parseFloat(vendor.offer);if(vendorOffer>highOffer){highVendor=vendor;}}return highVendor;}getVendorBasket(vendorId){let result=null;for(let i=0;i<this.sessionBasket.data.length;i++){let basket=this.sessionBasket.data[i];if(basket.vendorId===vendorId){result=basket;break;}}if(result===null){result=new basket_model_1.VendorBasketModel(vendorId);this.sessionBasket.data.push(result);}return result;}addToVendorBasket(item){console.log('addToVendorBasket ::',item);let basket=this.getVendorBasket(item.vendorId);console.log('addToVendorBasket :: Added');let existingItem=basket.items.find(o=>o.code===item.code);if(typeof existingItem==='object'){existingItem.count++;}else{basket.items.push(item);}return true;}addToBasket(code,offerData){let scope=this;let vendorBaskets=this.getSessionBasket();let highVendor=null;let highBidItem=null;console.log('>> addToBasket >> DEBUG :: Putte');for(let i=0;i<offerData.vendors.length;i++){let vendor=offerData.vendors[i];if(!vendor.accepted){console.log('NOT ACCEPTED');continue;}let vendorOffer=parseFloat(vendor.offer);let resultItem=new basket_item_model_1.BasketItem(code,vendor.vendorId,vendor.title,vendorOffer);this.addToVendorBasket(resultItem);if(highVendor===null){highVendor=vendor;highBidItem=resultItem;}let highOffer=parseFloat(highVendor.offer);if(vendorOffer>highOffer){highVendor=vendor;highBidItem=resultItem;}}console.log('1 ::');let bestBasket=this.getBestBasket();console.log('2 ::');let addResult=new basket_add_result_1.BasketAddResult(highBidItem!==null,highBidItem,bestBasket);console.log('3 ::');this.setSessionBasket();console.log('BASKETS ::',this.sessionBasket);this.echoDebug();return addResult;}getBasketTotal(basket){let total=0;for(let index in basket.items){let item=basket.items[index];total=total+item.offer;}return total;}getBestBasket(){let vendorBaskets=this.getSessionBasket();let bestTotal=0;let bestBaset=null;console.log('getBestBasket ::',bestBaset);for(let index in vendorBaskets.data){let basket=vendorBaskets.data[index];let total=this.getBasketTotal(basket);if(total>bestTotal){bestTotal=total;bestBaset=basket;}}return bestBaset;}apiAddBasketItem(req,resp){let scope=this;this.reqSession=req.session;let data=req.body;let reqCode=data.code;console.log('Add TO BASKET');this.callSearchService(reqCode).then(searchRes=>{resp.setHeader('Content-Type','application/json');let addResult=scope.addToBasket(reqCode,searchRes);resp.json(addResult);}).catch(err=>{controller_utils_1.ApiControllerUtils.internalError(resp);cli_logger_1.Logger.logError('SearchApiController :: error ::',err);});}apiGetBasket(req,resp){this.reqSession=req.session;let basketResult=new zap_basket_model_1.ZapBasketData();resp.setHeader('Content-Type','application/json');resp.write(JSON.stringify(basketResult));}initRoutes(routes){routes.get('/basket',this.apiGetBasket.bind(this));routes.post('/basket/add',this.apiAddBasketItem.bind(this));}callSearchService(code){cli_logger_1.Logger.logGreen('callSearchService');let url=zappy_app_settings_1.Settings.PriceServiceApi.Endpoint;return new Promise((resolve,reject)=>{return this.searchService.doDebugSearch(code).then(searchResult=>{console.log('callSearchService :: doSearch ::',searchResult);let result=zap_offer_model_1.ZapOfferResult.toZapRes(searchResult);resolve(result);}).catch(err=>{console.log('callSearchService :: error ::',err);resolve(err);});});}}exports.BasketApiController=BasketApiController;