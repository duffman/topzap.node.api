'use strict';Object.defineProperty(exports,'__esModule',{value:true});const basket_item_model_1=require('./basket-item.model');const basket_model_1=require('./basket.model');const basket_add_result_1=require('../zap-data-models/basket-add-result');const basket_collection_1=require('./basket-collection');class BasketApiController{constructor(){}echoDebug(){for(let i=0;i<this.baskets.data.length;i++){let basket=this.baskets.data[i];console.log('Vecndor :: '+basket.vendorId,basket.items);}}getSessionBasket(req){if(req.session.baskets){this.baskets=req.session.baskets;console.log('SESSION BASKET ::',this.baskets);}else{req.session.baskets=new basket_collection_1.BasketCollection();this.baskets=req.session.baskets;}return this.baskets;}setSessionBasket(req){try{req.session.baskets=this.baskets;}catch(err){console.log('setSessionBasket :: err ::',err);return false;}return true;}getBasket(req,resp){let basket=this.getSessionBasket(req);console.log('Get Basket ::',basket);resp.setHeader('Content-Type','application/json');resp.write(JSON.stringify(basket));}getHighestBidder(offerData){let highVendor=null;for(let i=0;i<offerData.vendors.length;i++){let vendor=offerData.vendors[i];if(!vendor.accepted){console.log('NOT ACCEPTED');continue;}if(highVendor===null){highVendor=vendor;}let highOffer=parseFloat(highVendor.offer);let vendorOffer=parseFloat(vendor.offer);if(vendorOffer>highOffer){highVendor=vendor;}}return highVendor;}getVendorBasket(vendorId){let result=null;for(let i=0;i<this.baskets.data.length;i++){let basket=this.baskets.data[i];if(basket.vendorId===vendorId){result=basket;break;}}if(result===null){result=new basket_model_1.BasketModel(vendorId);this.baskets.data.push(result);}return result;}addToVendorBasket(item){let basket=this.getVendorBasket(item.vendorId);let existingItem=basket.items.find(o=>o.code===item.code);console.log('existingItem ::',existingItem);if(existingItem!==null){existingItem.count++;}else{basket.items.push(item);}return true;}addToBasket(req,code,offerData){let scope=this;let vendorBaskets=this.getSessionBasket(req);let highVendor=null;let highBidItem=null;for(let i=0;i<offerData.vendors.length;i++){let vendor=offerData.vendors[i];if(!vendor.accepted){console.log('NOT ACCEPTED');continue;}let vendorOffer=parseFloat(vendor.offer);let resultItem=new basket_item_model_1.BasketItem(code,vendor.vendorId,vendor.title,vendorOffer);this.addToVendorBasket(resultItem);if(highVendor===null){highVendor=vendor;highBidItem=resultItem;}let highOffer=parseFloat(highVendor.offer);if(vendorOffer>highOffer){highVendor=vendor;highBidItem=resultItem;}}let addResult=new basket_add_result_1.BasketAddResult(highBidItem!==null,highBidItem);this.setSessionBasket(req);console.log('BASKETS ::',this.baskets);this.echoDebug();return addResult;}getBasketTotal(basket){let total=0;for(let index in basket.items){let item=basket.items[index];total=total+item.offer;}return total;}getBestBasket(req){let basket=null;let vendorBaskets=this.getSessionBasket(req);return basket;}addToBasket2(req,code,result){let scope=this;let baskets=this.getSessionBasket(req);let resultItem=null;let higestBiddingVendor=scope.getHighestBidder(result);let success=higestBiddingVendor!==null;console.log('higestBiddingVendor ::',higestBiddingVendor);console.log('success ::',success);if(success){resultItem=new basket_item_model_1.BasketItem(code,higestBiddingVendor.vendorId,higestBiddingVendor.title,parseFloat(higestBiddingVendor.offer));this.addToVendorBasket(resultItem);}let addResult=new basket_add_result_1.BasketAddResult(success,resultItem);this.setSessionBasket(req);console.log('BASKETS ::',this.baskets);this.echoDebug();return addResult;}addItem(req,resp){}initRoutes(routes){routes.get('/basket',this.getBasket.bind(this));routes.post('/basket',this.addItem.bind(this));}}exports.BasketApiController=BasketApiController;