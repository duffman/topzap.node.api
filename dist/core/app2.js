'use strict';Object.defineProperty(exports,'__esModule',{value:true});const express=require('express');const Promise=require('bluebird');const product_model_1=require('../models/product-model');const database_manager_1=require('../database/database-manager');const vendor_model_1=require('../models/vendor-model');const search_result_1=require('../models/search-result');const product_bid_model_1=require('../models/product-bid-model');const logger_1=require('../logger');class App{constructor(){this.port=8976;this.expressApp=express();this.db=new database_manager_1.DbManager();this.init();}getProduct(barcode){let sql=`SELECT games.* FROM games, product_edition AS edition WHERE edition.barcode='${barcode}' AND games.id = edition.game_id`;return new Promise((resolve,reject)=>{return this.db.dbQuery(sql).then(dbRes=>{let dbRow=dbRes.safeGetFirstRow();let model=new product_model_1.ProductModel(dbRow.getValAsStr('id'),dbRow.getValAsStr('platform_name'),dbRow.getValAsStr('title'),dbRow.getValAsStr('publisher'),dbRow.getValAsStr('developer'),dbRow.getValAsStr('genre'),dbRow.getValAsStr('cover_image'),dbRow.getValAsStr('thumb_image'),dbRow.getValAsStr('video_source'),dbRow.getValAsStr('source'),dbRow.getValAsStr('release_date'));resolve(model);}).catch(error=>{console.log('ERROR:',error);reject(error);});});}getVendors(){let result=new Array();let sql=`SELECT * FROM product_vendors`;return new Promise((resolve,reject)=>{return this.db.dbQuery(sql).then(dbRes=>{for(let i=0;i<dbRes.result.rowCount();i++){let dbRow=dbRes.result.dataRows[i];let model=new vendor_model_1.VendorModel(dbRow.getValAsStr('id'),dbRow.getValAsStr('identifier'),dbRow.getValAsStr('vendor_type'),dbRow.getValAsStr('name'),dbRow.getValAsStr('description'),dbRow.getValAsStr('website_url'),dbRow.getValAsStr('logo_name'),'');result.push(model);}resolve(result);}).catch(error=>{logger_1.Logger.logError('Error Gettings Vendors',error);reject(error);});});}getBidList(barcode){let result=new Array();let sql=`SELECT * FROM product_vendors`;return new Promise((resolve,reject)=>{this.db.dbQuery(sql).then(dbRes=>{for(let i=0;i<dbRes.result.rowCount();i++){let dbRow=dbRes.result.dataRows[i];let model=new product_bid_model_1.ProductBidModel(dbRow.getValAsStr('id'),dbRow.getValAsStr('vendor_id'),dbRow.getValAsStr('product_id'),dbRow.getValAsStr('barcode'),dbRow.getValAsStr('buy_price'),dbRow.getValAsStr('sell_price'));result.push(model);}resolve(result);}).catch(error=>{logger_1.Logger.logError('Error Gettings Vendors',error);reject(error);});});}getProductOffers(barcode){let result=new search_result_1.SearchResult();return new Promise((resolve,reject)=>{return this.getProduct(barcode).then(product=>{result.setProduct(product);return this.getVendors().then(vendors=>{return vendors;});}).then(vendorArray=>{result.vendors=vendorArray;return this.getBidList(barcode).then(bids=>{return bids;});}).then(bidsArray=>{result.bids=bidsArray;resolve(result);});});}test(barcode){return new Promise((resolve,reject)=>{this.getProductOffers(barcode).then(result=>{resolve(result);}).catch(error=>{logger_1.Logger.logError('Error in test',error);});});}init(){this.expressApp.get('/',(req,res)=>{this.getProductOffers('045496590451').then(result=>{res.json(result);}).catch(error=>{logger_1.Logger.logError('Error in test',error);});});this.expressApp.listen(this.port);console.log(`Listening on localhost: ${this.port}`);}}exports.App=App;let app=new App();