'use strict';Object.defineProperty(exports,'__esModule',{value:true});const http=require('http');const socket_io_types_1=require('./socket-io.types');const igniter_event_types_1=require('./igniter-event.types');const events_1=require('events');const igniter_settings_1=require('../igniter.settings');const igniter_messages_1=require('../messaging/igniter-messages');const message_utils_1=require('../messaging/message-utils');class IgniterServerSocket{constructor(serverPath,autoStart=false){this.serverPort=igniter_settings_1.IgniterSettings.DefSocketServerPort;this.eventEmitter=new events_1.EventEmitter();console.log('Starting Server');this.httpServer=http.createServer();this.httpServer.on('listening',()=>{console.log('Server Listening on port ::',this.serverPort);this.eventEmitter.emit(igniter_event_types_1.SocketEvents.ServerStarted,this.serverPort);});this.httpServer.on('error',err=>{console.log('Server Start Failed ::',err);this.eventEmitter.emit(igniter_event_types_1.SocketEvents.ServerStartError,err);});const io=require('socket.io')({path:'/'+serverPath,serveClient:true});io.attach(this.httpServer,{pingInterval:10000,pingTimeout:5000,cookie:false});io.on(socket_io_types_1.IOTypes.SOCKET_IO_CONNECTION,this.onConnect.bind(this));if(autoStart){this.startListen();}}startListen(){this.httpServer.listen(igniter_settings_1.IgniterSettings.DefSocketServerPort);}onConnect(socket){console.log('SERVER :: New Client Connected ::',socket.id);this.handleConnection(socket);}handleConnection(socket){this.eventEmitter.emit(igniter_event_types_1.SocketEvents.NewConnection,socket);socket.on(socket_io_types_1.IOTypes.SOCKET_IO_MESSAGE,data=>{console.log('<< SERVER :: NEW MESSAGE ::',data);this.handleMessage(data,socket);});}handleMessage(message,socket){let dataObj=message;try{if(typeof message==='string'){dataObj=JSON.parse(message);}if(message_utils_1.MessageUtils.validateMessageType(dataObj)===false){let errMessage='Invalid Message Type, does not conform to IgniterMessage';this.eventEmitter.emit(igniter_event_types_1.SocketEvents.Error,errMessage,message);return;}}catch(ex){console.log('Error in handleMessage:: ',message);console.log('handleMessage parse failed:',ex);this.eventEmitter.emit(igniter_event_types_1.SocketEvents.Error,'handleMessage',ex);return;}let igniterMessage=new igniter_messages_1.IgniterMessage(dataObj.type,dataObj.data,dataObj.tag);igniterMessage.socket=socket;this.eventEmitter.emit(igniter_event_types_1.SocketEvents.NewMessage,igniterMessage);}onServerStarted(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.ServerStarted,listener);}onServerStartError(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.ServerStartError,listener);}onNewConnection(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.NewConnection,listener);}onDisconnect(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.SocketClosed,listener);}onEvent(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.NewEvent,listener);}onMessage(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.NewMessage,listener);}onError(listener){this.eventEmitter.addListener(igniter_event_types_1.SocketEvents.Error,listener);}}exports.IgniterServerSocket=IgniterServerSocket;