'use strict';Object.defineProperty(exports,'__esModule',{value:true});const socket_io_server_1=require('./socket-io.server');const socket_io_client_1=require('./socket-io.client');const message_types_1=require('../messaging/message-types');const zap_message_types_1=require('../../../app/zap-ts-models/zap-message-types');function custLog(prefix,mess,data=null){let message=prefix+' ::: '+mess;if(data!==null){console.log(message,data);}else{console.log(message);}}function c(mess,data=null){custLog('CLIENT',mess,data);}function s(mess,data=null){custLog('SERVER',mess,data);}class MessageTest{constructor(){this.server=new socket_io_server_1.IgniterServerSocket(false);this.client=new socket_io_client_1.IgniterClientSocket();this.client.onConnect(()=>{c('Connected to Server');this.startTest();});this.client.onMessage(message=>{c('New Message Arrived ::',message);});this.server.onServerStarted(port=>{s('EVENT :: Server Started on Port ::',port);this.client.connect();});this.server.onServerStartError(err=>{s('EVENT :: Server Start FAIL ::',err);});this.server.onMessage(message=>{s('Message ::',message.type);if(message.type===message_types_1.MessageType.Action){s('AHA :: ACTION');message.reply(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.GetOffers,{return:'To Sender'});}});this.server.startListen();}startTest(){console.log('<<<<< startTest >>>>>');let messData={code:'0045496590451'};this.client.sendMessage(message_types_1.MessageType.Action,zap_message_types_1.ZapMessageType.GetOffers,messData).then(res=>{console.log('startTest :: sendMessage:RESOLVE ::',res);}).catch(err=>{console.log('startTest :: sendMessage:REJECT ::',err);});}}exports.MessageTest=MessageTest;let args=process.argv.slice(2);if(args[0]==='test'){let test=new MessageTest();}